{"ast":null,"code":"var _jsxFileName = \"/Users/aditummala/Downloads/calhacks22-main/Frontend/src/publicForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport Card from './Card';\nimport data from \"./data\";\nimport { useNavigate } from \"react-router-dom\";\nimport './cards.css';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PublicForm() {\n  _s();\n  const navigate = useNavigate();\n  const [filtData, setFiltData] = useState(\"\");\n  let averagePrice = 0;\n  for (let i = 0; i < data.length; i++) {\n    averagePrice += data[i].price;\n  }\n  averagePrice = averagePrice / data.length;\n  let data1 = [];\n  let counter = 0;\n  for (let i = 0; i < data.length; i++) {\n    data1.push(data[counter]);\n    counter += 1;\n  }\n  const [priceAVG, setPriceAVG] = useState('$' + averagePrice);\n  const navToHome = () => {\n    navigate(\"/\");\n  };\n  const filtered = data.filter(item => {\n    if (filtData === \"\") {\n      return item;\n    } else if (item.service.toLowerCase().includes(filtData.toLowerCase())) {\n      return item;\n    }\n  }).map(item => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      ...item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  });\n  function abstration(data) {\n    var total = 0;\n    for (let i = 0; i < data.length; i++) {\n      total = total + data[i].props.price;\n    }\n    if (isNaN(total / data.length)) {\n      setPriceAVG(NaN);\n    } else {\n      setPriceAVG('$' + total / data.length);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: navToHome,\n      children: \"Return Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"center\",\n        children: \"Search Bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"nav-search\",\n        name: \"SearchBar\",\n        onChange: event => {\n          setFiltData(event.target.value);\n          abstration(filtered);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"avg\",\n      children: [\"Average Cost of Service(s): \", priceAVG]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"public-page\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"cards-list\",\n        children: filtered\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n_s(PublicForm, \"uGYRAtutCLA+8b+bp0Kgl9LzV00=\", false, function () {\n  return [useNavigate];\n});\n_c = PublicForm;\nexport default PublicForm;\nvar _c;\n$RefreshReg$(_c, \"PublicForm\");","map":{"version":3,"names":["React","useState","Card","data","useNavigate","PublicForm","navigate","filtData","setFiltData","averagePrice","i","length","price","data1","counter","push","priceAVG","setPriceAVG","navToHome","filtered","filter","item","service","toLowerCase","includes","map","id","abstration","total","props","isNaN","NaN","event","target","value"],"sources":["/Users/aditummala/Downloads/calhacks22-main/Frontend/src/publicForm.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport Card from './Card';\nimport data from \"./data\";\nimport { useNavigate } from \"react-router-dom\";\nimport './cards.css';\nimport './styles.css';\n\nfunction PublicForm() {\n\n  const navigate = useNavigate();\n\n  const [filtData, setFiltData] = useState(\"\");\n  \n\n  let averagePrice = 0\n  for (let i = 0; i < data.length; i++){\n    averagePrice+= data[i].price\n  }\n  averagePrice = averagePrice / data.length\n  let data1 = []\n  let counter = 0\n  for(let i = 0; i < data.length; i++) {\n    data1.push(data[counter])\n    counter+=1\n    \n  }\n\n  const [priceAVG, setPriceAVG] = useState('$'+averagePrice);\n\n\n    const navToHome = () => {\n      navigate(\"/\");\n  }\n\n  const filtered = data.filter((item) => {\n    if(filtData === \"\") {\n      return item\n    } else if (item.service.toLowerCase().includes(filtData.toLowerCase())) {\n      return item\n    }\n  }).map(item => {\n    return(\n      <Card \n      key = {item.id}\n      {...item}\n      />\n    )\n  })\n\n\n\n  function abstration(data) {\n    var total = 0;\n    for(let i = 0; i < data.length; i++) {\n      total = total + data[i].props.price\n    }\n    if(isNaN(total/data.length)) {\n      setPriceAVG(NaN)\n    } else {\n      setPriceAVG('$'+total/data.length);\n    }\n  }\n\n\n\n  return <>\n  <button onClick={navToHome}>Return Home</button>\n  <form className='nav'>\n    <label className='center'>Search Bar</label>\n    <input className='nav-search' name=\"SearchBar\" onChange={(event) => \n    {\n      setFiltData(event.target.value); abstration(filtered);\n    }}></input>\n  </form>\n  <h1 className='avg'>Average Cost of Service(s): {priceAVG}</h1>\n  <div className='public-page'>\n      <section className='cards-list'>\n      {filtered}\n      </section>\n    </div>\n  </>\n    \n}\n\nexport default PublicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}