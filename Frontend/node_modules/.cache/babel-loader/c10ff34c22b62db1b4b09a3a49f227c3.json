{"ast":null,"code":"var _jsxFileName = \"/Users/bradl/Desktop/Berkeley/Fall_2022/Calhacks/calhacks-demo/src/invoiceForm.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validate = values => {\n  const errors = {};\n  if (!values.hospitalName) {\n    errors.hospitalName = 'Required';\n  }\n  if (!values.serviceType) {\n    errors.serviceType = 'Required';\n  }\n  if (!values.amount) {\n    errors.amount = 'Required';\n  }\n  return errors;\n};\nconst InvoiceForm = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      hospitalName: '',\n      serviceType: '',\n      amount: '',\n      timestamp: Date.now()\n    },\n    validationSchema: Yup.object({\n      hospitalName: Yup.string().required('Required'),\n      serviceType: Yup.string().required('Required'),\n      amount: Yup.string().required('Required')\n    }),\n    onSubmit: (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    children: formik => /*#__PURE__*/_jsxDEV(\"html\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Aequalis.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Please fill out information regarding your invoice.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"hospitalName\",\n          children: \"Hospital Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"hospitalName\",\n          type: \"text\",\n          ...formik.getFieldProps('hospitalName')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 23\n        }, this), formik.touched.hospitalName && formik.errors.hospitalName ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.hospitalName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 84\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"serviceType\",\n          children: \"Service Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"serviceType\",\n          type: \"text\",\n          ...formik.getFieldProps('hospitalName')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 23\n        }, this), formik.touched.serviceType && formik.errors.serviceType ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.serviceType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 82\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Invoice Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"amount\",\n          type: \"text\",\n          ...formik.getFieldProps('hospitalName')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 23\n        }, this), formik.touched.amount && formik.errors.amount ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 72\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"timestamp\",\n          children: \"Timestamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"timestamp\",\n          name: \"timestamp\",\n          type: \"text\",\n          readOnly: true,\n          value: formik.values.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n// const InvoiceForm = () => {\n//   const formik = useFormik({\n//     initialValues: {\n//       hospitalName : '',\n//       serviceType : '',\n//       amount: '',\n//       timestamp: Date.now(),\n//     },\n//     validate,\n//     onSubmit: values => {\n//       alert(JSON.stringify(values, null, 4));\n//     },\n//   });\n//   return (\n//     <html>\n//     <h1>\n//         Welcome to Aequalis.\n//     </h1>\n//     <h3>\n//         Please fill out information regarding your invoice.\n//     </h3>\n//     <form onSubmit={formik.handleSubmit}>\n//       <label htmlFor=\"hospitalName\">Hospital Name</label>\n//       <input\n//         id=\"hospitalName\"\n//         type=\"text\"\n//         {...formik.getFieldProps('hospitalName')}\n//       />\n//       {formik.touched.hospitalName && formik.errors.hospitalName ? <div>{formik.errors.hospitalName}</div> : null}\n\n//       <label htmlFor=\"serviceType\">Service Type</label>\n//       <input\n//         id=\"serviceType\"\n//         type=\"text\"\n//         {...formik.getFieldProps('hospitalName')}\n//       />\n//       {formik.touched.serviceType && formik.errors.serviceType ? <div>{formik.errors.serviceType}</div> : null}\n\n//       <label htmlFor=\"amount\">Invoice Amount</label>\n//       <input\n//         id=\"amount\"\n//         type=\"text\"\n//         {...formik.getFieldProps('hospitalName')}\n//       />\n//       {formik.touched.amount && formik.errors.amount ? <div>{formik.errors.amount}</div> : null}\n\n//       <label htmlFor=\"timestamp\">Timestamp</label>\n//       <input\n//         id=\"timestamp\"\n//         name=\"timestamp\"\n//         type=\"text\"\n//         readOnly\n//         value={formik.values.timestamp}\n//       />\n\n//       <div>\n//         <button type=\"submit\">Submit</button>\n//       </div>\n//     </form>\n//     </html>\n//   );\n// };\n_c = InvoiceForm;\nexport default InvoiceForm;\nvar _c;\n$RefreshReg$(_c, \"InvoiceForm\");","map":{"version":3,"names":["React","Formik","Yup","validate","values","errors","hospitalName","serviceType","amount","InvoiceForm","timestamp","Date","now","object","string","required","setSubmitting","setTimeout","alert","JSON","stringify","formik","handleSubmit","getFieldProps","touched"],"sources":["/Users/bradl/Desktop/Berkeley/Fall_2022/Calhacks/calhacks-demo/src/invoiceForm.js"],"sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport \"./styles.css\";\n\nconst validate = values => {\n  const errors = {};\n  if (!values.hospitalName) {\n    errors.hospitalName = 'Required';\n  }\n\n  if (!values.serviceType) {\n    errors.serviceType = 'Required';\n  }\n\n  if (!values.amount) {\n    errors.amount = 'Required';\n  }\n\n  return errors;\n};\n\nconst InvoiceForm = () => {\n    return (\n        <Formik\n            initialValues = {{\n                hospitalName : '',\n                serviceType : '',\n                amount: '',\n                timestamp: Date.now(),\n            }}\n            validationSchema = {\n                Yup.object(\n                    {\n                        hospitalName: Yup.string().required('Required'),\n                        serviceType: Yup.string().required('Required'),\n                        amount: Yup.string().required('Required'),\n                    }\n                )\n            }\n            onSubmit={(values, { setSubmitting }) => {\n                setTimeout(() => {\n                  alert(JSON.stringify(values, null, 2));\n                  setSubmitting(false);\n                }, 400);\n            }}\n        >\n            {formik => (\n                    <html>\n                    <h1>\n                        Welcome to Aequalis.\n                    </h1>\n                    <h3>\n                        Please fill out information regarding your invoice.\n                    </h3>\n                    <form onSubmit={formik.handleSubmit}>\n                      <label htmlFor=\"hospitalName\">Hospital Name</label>\n                      <input\n                        id=\"hospitalName\"\n                        type=\"text\"\n                        {...formik.getFieldProps('hospitalName')}\n                      />\n                      {formik.touched.hospitalName && formik.errors.hospitalName ? <div>{formik.errors.hospitalName}</div> : null}\n                \n                      <label htmlFor=\"serviceType\">Service Type</label>\n                      <input\n                        id=\"serviceType\"\n                        type=\"text\"\n                        {...formik.getFieldProps('hospitalName')}\n                      />\n                      {formik.touched.serviceType && formik.errors.serviceType ? <div>{formik.errors.serviceType}</div> : null}\n                \n                      <label htmlFor=\"amount\">Invoice Amount</label>\n                      <input\n                        id=\"amount\"\n                        type=\"text\"\n                        {...formik.getFieldProps('hospitalName')}\n                      />\n                      {formik.touched.amount && formik.errors.amount ? <div>{formik.errors.amount}</div> : null}\n                \n                      <label htmlFor=\"timestamp\">Timestamp</label>\n                      <input\n                        id=\"timestamp\"\n                        name=\"timestamp\"\n                        type=\"text\"\n                        readOnly\n                        value={formik.values.timestamp}\n                      />\n                \n                      <div>\n                        <button type=\"submit\">Submit</button>\n                      </div>\n                    </form>\n                    </html>\n            )}\n        </Formik>\n    );\n};\n// const InvoiceForm = () => {\n//   const formik = useFormik({\n//     initialValues: {\n//       hospitalName : '',\n//       serviceType : '',\n//       amount: '',\n//       timestamp: Date.now(),\n//     },\n//     validate,\n//     onSubmit: values => {\n//       alert(JSON.stringify(values, null, 4));\n//     },\n//   });\n//   return (\n//     <html>\n//     <h1>\n//         Welcome to Aequalis.\n//     </h1>\n//     <h3>\n//         Please fill out information regarding your invoice.\n//     </h3>\n//     <form onSubmit={formik.handleSubmit}>\n//       <label htmlFor=\"hospitalName\">Hospital Name</label>\n//       <input\n//         id=\"hospitalName\"\n//         type=\"text\"\n//         {...formik.getFieldProps('hospitalName')}\n//       />\n//       {formik.touched.hospitalName && formik.errors.hospitalName ? <div>{formik.errors.hospitalName}</div> : null}\n\n//       <label htmlFor=\"serviceType\">Service Type</label>\n//       <input\n//         id=\"serviceType\"\n//         type=\"text\"\n//         {...formik.getFieldProps('hospitalName')}\n//       />\n//       {formik.touched.serviceType && formik.errors.serviceType ? <div>{formik.errors.serviceType}</div> : null}\n\n//       <label htmlFor=\"amount\">Invoice Amount</label>\n//       <input\n//         id=\"amount\"\n//         type=\"text\"\n//         {...formik.getFieldProps('hospitalName')}\n//       />\n//       {formik.touched.amount && formik.errors.amount ? <div>{formik.errors.amount}</div> : null}\n\n//       <label htmlFor=\"timestamp\">Timestamp</label>\n//       <input\n//         id=\"timestamp\"\n//         name=\"timestamp\"\n//         type=\"text\"\n//         readOnly\n//         value={formik.values.timestamp}\n//       />\n\n//       <div>\n//         <button type=\"submit\">Submit</button>\n//       </div>\n//     </form>\n//     </html>\n//   );\n// };\n\nexport default InvoiceForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}